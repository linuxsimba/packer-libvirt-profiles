# -*- mode: ruby -*-
# vi: set ft=ruby :

# Default Fuel master settings
fuel_master_memory = 2048
fuel_master_cpu = 2

# Default openstack server settings.
openstack_server_memory = 2048
openstack_server_disk_size = '100G'

## When running `vagrant up` run it with the `--no-parallel` option.
## This ensures that the fuel_master comes up first

Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.

  # Disable the synced_folder feature
  config.vm.synced_folder '.', '/vagrant', :disabled => true

  config.vm.define :fuel_master do |node|
    node.vm.provider :libvirt do |domain|
      domain.memory = fuel_master_memory
      domain.cpus = fuel_master_cpu
    end

    node.vm.box = "mirantis-7"
    node.vm.network :private_network,
      :ip => '10.20.0.2',
      :netmask => '255.255.255.0',
      :libvirt__forward_mode => 'none',
      :libvirt__network_name => 'pxe_network',
      :libvirt__dhcp_enabled => false
    # this is needed to create the mirantis_public_net in libvirt
    # Give it an address that does not conflict with the default "public"
    # address range given in Fuel GUI.
    # Again this is just for testing, so design does not have to be perfect
    node.vm.network :private_network,
      :ip => '172.16.0.254',
      :netmask => '255.255.255.0',
      :libvirt__forward_mode => 'none',
      :libvirt__network_name => 'mirantis_public_net',
      :libvirt__dhcp_enabled => false

    node.vm.network "forwarded_port", guest: 8000, host: 8000
    # During provisioning of docker containers, Fuel will attempt to bring up
    # the fuel menu but fail, due to ssh settings on the vagrant provisioner. its okay
    # its not a problem. Just ignore. For some reason I cannot get the ks.cfg in
    # the packer script to set to the ENABLED=1.. So just decrement to -1
    # instead. fuel-createmirror requires ubuntu:local docker. docker version in
    # Mirantis-7 is 0.4, too old to do a docker pull from docker hub. Bug opened
    # with Mirantis fuel [https://bugs.launchpad.net/fuel/+bug/1528498]
    node.vm.provision "shell", inline: <<-SHELL
      . /etc/sysconfig/bootstrap_admin_node
      if test "${ENABLED}" = "0"; then
        touch /etc/dnsmasq.upstream
        echo "ENABLED=-1" > /etc/sysconfig/bootstrap_admin_node
        /usr/local/sbin/bootstrap_admin_node.sh 2>&1 | tee /var/log/puppet/bootstrap_admin_node.log
        echo "Installing apt repo cause design doesn't have a valid public interface. May have to review design if keep running into problems"
        wget http://mirror.fuel-infra.org/docker/ubuntu.trusty.tar.xz -O /tmp/ubuntu.trusty.tar.xz
        docker load -i /tmp/ubuntu.trusty.tar.xz
        fuel-createmirror
        echo "Sleep for 60 seconds to ensure docker containers come up. Otherwise PXE Booting Openstack Nodes in next vagrant bringup will fail"
        sleep 60
      fi
    SHELL
  end

  # 1st Openstack Server
  config.vm.define :openstack_node1 do |node|
    node.vm.communicator = ''
    node.vm.provider :libvirt do |domain|
      domain.storage :file, :size => openstack_server_disk_size, :type => 'qcow2'
      domain.boot 'network'
      domain.boot 'hd'
      domain.memory = openstack_server_memory
      domain.management_network_name = 'pxe_network'
      domain.management_network_address = '10.20.0.0/24'
      domain.management_network_mac = '361122334411'
    end
    # Back to back connection between openstack server 1 and 2
    # configures the mgmt and storage and tenant networks (vlan type driver)
    node.vm.network :private_network,
      :libvirt__tunnel_type => 'server',
      :libvirt__tunnel_port => '9999'
    # nic for the public network(really doesn't go to the internet. Just a
    # mirantis_public_net bridge)
    node.vm.network :private_network,
      :ip => '172.16.0.2/24',
      :auto_config => false,
      :libvirt__forward_mode => 'none',
      :libvirt__dhcp_enabled => false,
      :libvirt__network_name => 'mirantis_public_net'
  end

  # 2nd Openstack Server
  config.vm.define :openstack_node2 do |node|
    node.vm.provider :libvirt do |domain|
      domain.storage :file, :size => openstack_server_disk_size , :type => 'qcow2'
      domain.boot 'network'
      domain.boot 'hd'
      domain.memory = openstack_server_memory
      domain.management_network_name = 'pxe_network'
      domain.management_network_address = '10.20.0.0/24'
      domain.management_network_mac = '361122334455' # in private mac range
    end
    # Back to back connection between openstack server 1 and 2
    # configures the mgmt and storage and tenant networks (vlan type driver)
    node.vm.network :private_network,
      :libvirt__tunnel_type => 'client',
      :libvirt__tunnel_port => '9999'
    # nic for the public network(really doesn't go to the internet. Just a
    # bridge). do not configure any IP address on this nic. just add it to the
    # mirantis_public_net bridge
    node.vm.network :private_network,
      :ip => '172.16.0.3/24',
      :auto_config => false,
      :libvirt__forward_mode => 'none',
      :libvirt__dhcp_enabled => false,
      :libvirt__network_name => 'mirantis_public_net'
  end
end
